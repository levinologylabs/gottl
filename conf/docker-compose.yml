services:
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgers
  caddy:
    image: caddy:latest
    entrypoint: caddy run --config /root/Caddyfile
    volumes:
      - $PWD/conf/Caddyfile.dev:/root/Caddyfile
      - $PWD/public:/srv
      - caddy:/data
      #- caddy_logs:/var/log/caddy
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ## obs stack
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
  # promtail
  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log # mount local logs
      - $PWD/gottl.log:/logs/gottl.log
      - $PWD/conf/promtail.dev.yaml:/promtail.config.yml
      #- caddy_logs:/caddy
    command: -config.file=/promtail.config.yml
  # grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
volumes:
  caddy:
  caddy_logs:
  postgres:
