---
services:
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgers
    labels:
      logging: "promtail"

  caddy:
    image: caddy:latest
    entrypoint: caddy run --config /root/Caddyfile
    volumes:
      - $PWD/conf/Caddyfile.dev:/root/Caddyfile
      - $PWD/public:/srv
      - caddy:/data
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      logging: "promtail"

  # https://github.com/grafana/tempo/blob/main/example/docker-compose/agent/agent.yml
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo:/var/tempo

  tempo:
    image: *tempoImage
    command: ["-config.file=/tempo.yml"]
    volumes:
      - $PWD/conf/tempo.dev.yml:/tempo.yml
      - ./tempo:/var/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200" # tempo
      - "4317" # otlp grpc
      - "4318" # otlp http
      - "9411" # zipkin2024-04-23T16:16:57+0000
    depends_on:
      - init

  # alloy:
  #   image: grafana/alloy:latest
  #   ports:
  #     - "4317:4317"
  #     - "4318:4318"
  #   volumes:
  #     - $PWD/conf/alloy.dev.config/etc/alloy/config.alloy
  #     - $PWD/gottl.log:/logs/gottl.log
  #     # - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     # - /var/run/docker.sock:/var/run/docker.sock
  #   command: >-
  #     run --server.http.listen-addr=0.0.0.0:12345
  #     --storage.path=/var/lib/alloy/data
  #     /etc/alloy/config.alloy

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/prometheus.yml"
    volumes:
      - $PWD/conf/prometheus.dev.yml:/prometheus.yml
      - prometheus:/prometheus

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    labels:
      logging: "promtail"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - $PWD/gottl.log:/logs/gottl.log
      - $PWD/conf/promtail.dev.yml:/promtail.config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/promtail.config.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - $PWD/conf/grafana_datasources.dev.yml:/etc/grafana/provisioning/datasources/ds.yml
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        /run.sh
    labels:
      logging: "promtail"

volumes:
  caddy:
  postgres:
  prometheus:
  tempo:
