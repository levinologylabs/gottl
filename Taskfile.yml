version: "3"
env:
  LOG_LEVEL: "debug"
dotenv:
  - .env
tasks:
  run:
    desc: Runs the main application and supports passing CLI args
    deps:
      - db:sqlc
      - swag
    cmds:
      - docker compose -f ./conf/docker-compose.yml up --detach
      - go run ./cmd/api/*.go {{ .CLI_ARGS }}
    silent: false
  build:
    desc: Builds the backend binary
    cmds:
      - mkdir -p bin
      - go build -o bin/api ./cmd/api
  test:
    desc: Runs all go tests
    cmds:
      - go test {{ .CLI_ARGS }} ./...
  coverage:
    desc: Runs all go tests with -race flag and generates a coverage report
    cmds:
      - go test -race -coverprofile=coverage.out -covermode=atomic ./... -v -cover
    silent: true
  tidy:
    desc: Runs go mod tidy on the backend
    cmds:
      - go mod tidy
  lint:
    desc: Runs golangci-lint
    cmds:
      - golangci-lint run ./...
  pr:
    desc: Runs all go test and lint related tasks for PRs
    cmds:
      - task: tidy
      - task: lint
      - task: test

  db:migration:
    desc: "Creates a new up/down migration ex: `task db:migration -- create_user_table`"
    dir: ./internal/data/db/migrations/sql
    cmds:
      - goose create {{ .CLI_ARGS }} sql

  db:up:
    desc: "Runs the migration cli to apply all migrations"
    cmds:
      - go run ./cmd/cli/*.go migrate up

  db:down:
    desc: "Runs the migration cli to rollback the last migration"
    cmds:
      - go run ./cmd/cli/*.go migrate down

  db:seed:
    desc: "Runs the migration cli to seed the database"
    cmds:
      - go run ./cmd/cli/*.go seed

  db:sqlc:
    aliases: ["sqlc"]
    desc: "Generate the sqlc code"
    sources:
      - ./internal/data/db/migrations/sql/*.sql
      - ./internal/data/db/*.sql
      - ./sqlc.yml
    generates:
      - ./internal/data/db/*.go
    cmds:
      - sqlc generate

  swag:
    desc: Generate swagger docs
    sources:
      - ./cmd/api/main.go
      - ./internal/data/dtos/*.go
      - ./internal/web/handlers/*.go
    generates:
      - ./internal/web/docs/swagger.json
    cmds:
      - swag fmt --dir=./internal
      - swag init --outputTypes=json -g ./cmd/api/main.go --output=./internal/web/docs/
